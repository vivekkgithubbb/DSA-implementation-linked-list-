#include<iostream>
using namespace std;
class node{
	public:
	int data;
	node*next;
	node(int d){
		data=d;
		next=NULL;
	}
};
void insertattail(node*&head,node*&tail,int d){
	node*x=new node(d);
	if(head==NULL){
		head=x;
		tail=x;
	}
	else{
		tail->next=x;
		tail=x;
	}
}
node*mergetwosortedll(node*head1,node*head2){
	if(head1==NULL){
		return head2;
	}
	if(head2==NULL){
		return head1;
	}
	else if(head1->data<head2->data){
		node*newhead=NULL;
		newhead=head1;
		newhead->next=mergetwosortedll(head1->next,head2);
		return newhead;
	}
	else{
		node*newhead=NULL;
		newhead=head2;
		newhead->next=mergetwosortedll(head1,head2->next);
		return newhead;
	}
}
void printll(node*newhead){
	node*temp=newhead;
	while(temp!=NULL){
		cout<<temp->data<<" ";
		temp=temp->next;
	}
}
node* midlell(node*head){
	node*p1=head;
	node*p2=head->next;
	while(p2!=NULL && p2->next!=NULL){
		p1=p1->next;
		p2=p2->next->next;
	}
	return p1;
}
node*mergesort(node*head){
	if(head==NULL){
		return NULL;
	}
	if(head->next==NULL){//single node is always sorted
		return head;
	}
	node*mid=midlell(head);
	node*n=mid->next;
	mid->next=NULL;
	node*x=mergesort(head);
	node*y=mergesort(n);
	return mergetwosortedll(x,y);
}

int main(){
node*head=NULL;
node*tail=NULL;
int n;
cin>>n;
for(int i=0;i<n;i++){
	int data;
	cin>>data;
	insertattail(head,tail,data);
}
node*newhead=mergesort(head);
	printll(newhead);	
}
