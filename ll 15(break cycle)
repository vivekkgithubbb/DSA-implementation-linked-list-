#include<iostream>
using namespace std;
class node{
	public:
	int data;
	node*next;
	node(int d){
		data=d;
		next=NULL;
	}
};
void insertattail(node*&head,node*&tail,int d){
	node*p=new node(d);
	if(head==NULL){
		head=p;
		tail=p;
	}
	else{
		tail->next=p;
		tail=p;
	}
}
void createcycle(node*head,int pos){
	node*temp=head;
	for(int jump=0;jump<=pos;jump++){
		temp=temp->next;
	}
    node*t=head;
    while(t->next!=NULL){
    	t=t->next;
	}
	t->next=temp;
}
void breakcycle(node*head){
	//check cycle is present
	node*p1=head;
	node*p2=head;
	bool kyacyclehai=false;
	while(p2->next!=NULL){
		p1=p1->next;
		p2=p2->next->next;
		if(p1==p2){
			kyacyclehai=true;
			break;
		}
	}
	if(kyacyclehai==true){
		p1=head;
		while(p1->next!=p2->next){
			p1=p1->next;
			p2=p2->next;
		}
		p2->next=NULL;
	}
}
void printll(node*head){
	node*temp=head;
	while(temp!=NULL){
		cout<<temp->data<<" ";
		temp=temp->next;
	}
}
int main(){
	node*head=NULL;
	node*tail=NULL;
	int n;
	cin>>n;
	for(int i=0;i<n;i++){
		int d;
		cin>>d;
		insertattail(head,tail,d);
	}
int pos;
cin>> pos;
    createcycle(head,pos);
    breakcycle(head);
    printll(head);
}
