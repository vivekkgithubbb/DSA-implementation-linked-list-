#include<iostream>
using namespace std;
class node{
	public:
	int data;
	node*next;
	node(int d){
		data=d;
		next=NULL;
	}
};
void insertatfront(node*&head,node*&tail,int d){
	node*p=new node(d);
	if(head==NULL){
		head=p;
		tail=p;
	}
	else{
		p->next=head;
		head=p;
	}
}
void insertattail(node*&head,node*&tail,int d){
	node*temp=new node(d);
	if(head==NULL){
		head=temp;
		tail=temp;
	}
	else{
		tail->next=temp;
		tail=temp;
	}
}
int lenll(node* head){
	int co=0;
	node*temp=head;
	while(temp!=NULL){
		co=co+1;
		temp=temp->next;
	}
	return co;
}
void printll(node*head){
	node*temp=head;
	while(temp!=NULL){
		cout<<temp->data<<" ";
		temp=temp->next;
	}
	cout<<endl;
}
void bubblesortinll(node*head){
	for(int times=1;times<=lenll(head)-1;times++){
		for(node*temp=head;temp->next!=NULL;temp=temp->next){
			if(temp->data>temp->next->data){
				swap(temp->data,temp->next->data);
			}
		}
	}
}


int main(){
	node*head=NULL;
	node*tail=NULL;
	insertattail(head,tail,5);
	insertattail(head,tail,4);
	insertattail(head,tail,3);
	insertattail(head,tail,2);
	insertattail(head,tail,1);
	bubblesortinll(head);
	printll(head);

}
